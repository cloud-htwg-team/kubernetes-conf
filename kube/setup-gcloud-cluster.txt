gcloud components install kubectl
gcloud auth login
gcloud config set project PROJECT_ID

###make sure you are in the right context, not on local machine
kubectl config current-context

###create a cluster 
gcloud container clusters create qr-code-app --release-channel None --zone europe-west3-a --node-locations europe-west3-a
###connect to the cluster
gcloud container clusters get-credentials qr-code-app --zone europe-west3-a

###for testing, add a pod to the cluster with the docker image in containers of gcloud
kubectl run qrcode-java-app --image eu.gcr.io/qrcode-374515/zeyesm/java-app-qr --cluster gke_qrcode-374515_europe-west3-a_qr-code-app

###add your own kubes from manifest to the cluster, works for pods and services
kubectl apply -f qr-nodeport.yaml

https://cloud.google.com/kubernetes-engine/docs/how-to/exposing-apps

###allow port 8080 for testing
gcloud compute firewall-rules create test-node-port --allow tcp:30080

###Test your configuration
kubectl get nodes -o wide ###to get an external IP address

###In your webbrowser : Node-External-IP:30080

###add an ingress
download helm
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update
helm install nginx-ingress ingress-nginx/ingress-nginx
kubectl get deployment nginx-ingress-ingress-nginx-controller
kubectl get service nginx-ingress-ingress-nginx-controller
###keep the ip in mind or in a variable and add it to the dns of your web domain
kubectl apply -f ingress-resource.yaml
kubectl describe ingress-ressource 

kubectl create secret tls qreach-ingress-tls --key qreach-ingress-tls.key --cert qreach-ingress-tls.crt

#add virtualserver
#in helm repo:
git clone https://github.com/nginxinc/kubernetes-ingress/
cd kubernetes-ingress/deployments
kubectl apply -f common/crds/k8s.nginx.org_virtualservers.yaml
kubectl apply -f common/crds/k8s.nginx.org_virtualserverroutes.yaml
kubectl apply -f common/crds/k8s.nginx.org_transportservers.yaml
kubectl apply -f common/crds/k8s.nginx.org_policies.yaml

#delete an ingress
kubectl delete -f ingress-resource.yaml
helm del nginx-ingress

#setup tls key with linux and openssl
openssl req -new -x509 -days 9999 -keyout ca-key.pem -out ca-crt.pem
openssl genrsa -out server-key.pem 2048
openssl req -new -key server-key.pem -out server-csr.pem # the CN must be your dns
openssl x509 -req -days 9999 -in server-csr.pem -CA ca-crt.pem -CAkey ca-key.pem -CAcreateserial -out server-crt.pem

##ensuite de retour dans le gcloud shell
kubectl create secret tls qreach-ingress-tls --key server-key.pem --cert server-crt.pem